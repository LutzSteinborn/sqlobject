[tox]
minversion = 1.8
envlist = {py26,py27}-{mysqldb,oursql},{py34,py35}-{mysqlclient,pypostgresql},{py26,py27,py34,py35}-{mysql-connector,pymysql,psycopg,pygresql,pg8000,sqlite},{py27,py34}-flake8

# Base test environment settings
[testenv]
# Ensure we cd into sqlobject before running the tests
changedir = ./sqlobject/
deps =
    pytest
    pytest-cov
    py26,py27: FormEncode >= 1.1.1, != 1.3.0
    py34,py35: FormEncode >= 1.3.1
    PyDispatcher>=2.0.4
    py26,py27: egenix-mx-base
    mysqldb: mysql-python
    mysqlclient: mysqlclient
    mysql-connector: mysql-connector
    py26,py27: oursql
    pymysql: pymysql
    psycopg: psycopg2
    pygresql: pygresql
    pypostgresql: py-postgresql
    pg8000: pg8000
passenv = CI TRAVIS TRAVIS_*
# Don't fail or warn on uninstalled commands
whitelist_externals =
    mysql
    createdb
    dropdb

# MySQL test environments
[mysqldb]
commands =
    mysql -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D mysql://root:@localhost/sqlobject_test?driver=mysqldb
    mysql -e 'drop database sqlobject_test;'

[testenv:py26-mysqldb]
commands = {[mysqldb]commands}

[testenv:py27-mysqldb]
commands = {[mysqldb]commands}

[mysqlclient]
commands =
    mysql -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D mysql://root:@localhost/sqlobject_test?driver=mysqldb&charset=utf8
    mysql -e 'drop database sqlobject_test;'

[testenv:py34-mysqlclient]
commands = {[mysqlclient]commands}

[testenv:py35-mysqlclient]
commands = {[mysqlclient]commands}

[mysql-connector]
commands =
    mysql -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D mysql://root:@localhost/sqlobject_test?driver=connector&charset=utf8
    mysql -e 'drop database sqlobject_test;'

[testenv:py26-mysql-connector]
commands = {[mysql-connector]commands}

[testenv:py27-mysql-connector]
commands = {[mysql-connector]commands}

[testenv:py34-mysql-connector]
commands = {[mysql-connector]commands}

[testenv:py35-mysql-connector]
commands = {[mysql-connector]commands}

[oursql]
commands =
    mysql -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D mysql://root:@localhost/sqlobject_test?driver=oursql
    mysql -e 'drop database sqlobject_test;'

[testenv:py26-oursql]
commands = {[oursql]commands}

[testenv:py27-oursql]
commands = {[oursql]commands}

[pymysql]
commands =
    mysql -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D mysql://root:@localhost/sqlobject_test?driver=pymysql&charset=utf8
    mysql -e 'drop database sqlobject_test;'

[testenv:py26-pymysql]
commands = {[pymysql]commands}

[testenv:py27-pymysql]
commands = {[pymysql]commands}

[testenv:py34-pymysql]
commands = {[pymysql]commands}

[testenv:py35-pymysql]
commands = {[pymysql]commands}

# PostgreSQL test environments
[psycopg]
commands =
    createdb -U postgres sqlobject_test
    pytest --cov=sqlobject -D postgres://postgres:@localhost/sqlobject_test?driver=psycopg tests include/tests inheritance/tests versioning/test
    dropdb -U postgres sqlobject_test

[testenv:py26-psycopg]
commands = {[psycopg]commands}

[testenv:py27-psycopg]
commands = {[psycopg]commands}

[testenv:py34-psycopg]
commands = {[psycopg]commands}

[testenv:py35-psycopg]
commands = {[psycopg]commands}

[pygresql]
commands =
    createdb -U postgres sqlobject_test
    pytest --cov=sqlobject -D postgres://postgres:@localhost/sqlobject_test?driver=pygresql tests include/tests inheritance/tests versioning/test
    dropdb -U postgres sqlobject_test

[testenv:py26-pygresql]
commands = {[pygresql]commands}

[testenv:py27-pygresql]
commands = {[pygresql]commands}

[testenv:py34-pygresql]
commands = {[pygresql]commands}

[testenv:py35-pygresql]
commands = {[pygresql]commands}

[pypostgresql]
commands =
    createdb -U postgres sqlobject_test
    pytest --cov=sqlobject -D postgres://postgres:@localhost/sqlobject_test?driver=pypostgresql tests include/tests inheritance/tests versioning/test
    dropdb -U postgres sqlobject_test

[testenv:py34-pypostgresql]
commands = {[pypostgresql]commands}

[testenv:py35-pypostgresql]
commands = {[pypostgresql]commands}

[pg8000]
commands =
    createdb -U postgres sqlobject_test
    pytest --cov=sqlobject -D postgres://postgres:@localhost/sqlobject_test?driver=pg8000 tests include/tests inheritance/tests versioning/test
    dropdb -U postgres sqlobject_test

[testenv:py26-pg8000]
commands = {[pg8000]commands}

[testenv:py27-pg8000]
commands = {[pg8000]commands}

[testenv:py34-pg8000]
commands = {[pg8000]commands}

[testenv:py35-pg8000]
commands = {[pg8000]commands}

# SQLite test environments
[sqlite]
commands =
    pytest --cov=sqlobject -D sqlite:///tmp/sqlobject_test.sqdb

[testenv:py26-sqlite]
commands = {[sqlite]commands}

[testenv:py27-sqlite]
commands = {[sqlite]commands}

[testenv:py34-sqlite]
commands = {[sqlite]commands}

[testenv:py35-sqlite]
commands = {[sqlite]commands}

# Special test environments
[testenv:py27-flake8]
changedir = ./
deps =
    flake8
commands = flake8 .

[testenv:py34-flake8]
changedir = ./
deps =
    flake8
commands = flake8 .
